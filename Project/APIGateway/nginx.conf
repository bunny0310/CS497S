upstream posts_service {
    least_conn;
    server project_posts_service_1:5000;
}

upstream comments_service {
    server project_comments_service_1:5000;
}

upstream votes_service {
    server project_votes_service_1:5003;
}

server {

    #
    # Wide-open CORS config for nginx
    #
    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
    }
    
    location /posts_service {
        add_header Access-Control-Allow-Origin *;
        rewrite ^/posts_service/(.*)$ /$1 break;
        proxy_pass http://posts_service;
    }

    location /comments_service {
        rewrite ^/comments_service/(.*)$ /$1 break;
        proxy_pass http://comments_service;
    }

    location /votes_service {
        rewrite ^/votes_service/(.*)$ /$1 break;
        proxy_pass http://votes_service;
    }
}