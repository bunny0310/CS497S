version: '3.4'

services:
  api_gateway:
    build:
      context: APIGateway
    container_name: project_gateway
    restart: always
    networks:
      - network
    ports:
      - "80:80"

  database:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    container_name: project_database
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
    - ./Database/init:/docker-entrypoint-initdb.d
    networks:
    - network
    security_opt:
      - seccomp:unconfined
    # command: --secure-file-priv=""
    ports:
      - "3306:3306"
  
  posts_service:
    build:
      context: PostsService
      dockerfile: Dockerfile-Posts
    container_name: project_posts_service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_HOST: ${MYSQL_DOCKER_SERVICE_NAME}
    volumes:
      - ./PostsService/PostsService:/app
    networks:
      - network
    expose:
      - "5000"

  comments_service:
    build:
      context: PostsService
      dockerfile: Dockerfile-Comments
    container_name: project_comments_service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_HOST: ${MYSQL_DOCKER_SERVICE_NAME}
    volumes:
      - ./PostsService/CommentsService:/app
      - ./PostsService/Models:/Models
    networks:
      - network
    expose:
      - "5000"

  votes_service:
    build:
      context: VotesService
    container_name: project_votes_service
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_HOST: ${MYSQL_DOCKER_SERVICE_NAME}
    volumes:
      - ./VotesService:/app
    networks:
      - network
    expose:
      - "5003"

  trending_posts_service:
    build:
      context: TrendingPostsService
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_HOST: ${MYSQL_DOCKER_SERVICE_NAME}
    volumes:
      - ./TrendingPostsService:/app
    networks:
      - network
    expose:
      - "5000"

  authentication_service:
    build:
      context: AuthenticationService
    container_name: project_authentication_service
    restart: always
    # volumes:
    #   - ./AuthenticationService:/usr/src/app
    networks:
      - network
    expose:
      - "5000"

      
networks:
  network:

